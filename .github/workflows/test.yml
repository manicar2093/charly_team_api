name: Test project

on:
  pull_request:
    types: [edited, synchronize, opened, reopened]
    branches: [ main ]

jobs:

  test:
    name: Run Test
    strategy:
      matrix:
        go-version: [ 1.16.x ]
        os: [ ubuntu-latest ]
        node-version: [ 14.16.x ]
    runs-on: ${{ matrix.os }}
    env:
        DB_HOST: ${{ secrets.DB_HOST_DEV }}
        DB_PORT: ${{ secrets.DB_PORT_DEV }}
        DB_NAME: ${{ secrets.DB_NAME_DEV }}
        DB_USER: ${{ secrets.DB_USER_DEV }}
        DB_URL: ${{ secrets.DB_URL_DEV }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
        AWS_REGION: ${{ secrets.AWS_REGION_DEV }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        COGNITO_POOL_ID: ${{ secrets.COGNITO_POOL_ID_DEV }}

    services:
      postgres:
        image: postgres
        ports:
          - 3456:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USER_DEV }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
          POSTGRES_DB: ${{ secrets.DB_NAME_DEV }}

    steps:
    
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Set up NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: go mod download

    - name: Install Knex
      run: npm install -g knex

    - name: Install Node dependencies
      run: npm install

    - name: Migrate DB
      run: make db_testing_fill
      
    - name: Test
      run: go test ./... -v
    
    - name: Rollback to DB
      run: make db_testing_rollback
