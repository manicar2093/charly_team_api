// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	paginator "github.com/manicar2093/charly_team_api/db/paginator"
	mock "github.com/stretchr/testify/mock"

	rel "github.com/go-rel/rel"
)

// UserFilterService is an autogenerated mock type for the UserFilterService type
type UserFilterService struct {
	mock.Mock
}

// GetUserFilter provides a mock function with given fields: _a0
func (_m *UserFilterService) GetUserFilter(_a0 string) (func(context.Context, rel.Repository, interface{}, paginator.Paginable) (interface{}, error), bool) {
	ret := _m.Called(_a0)

	var r0 func(context.Context, rel.Repository, interface{}, paginator.Paginable) (interface{}, error)
	if rf, ok := ret.Get(0).(func(string) func(context.Context, rel.Repository, interface{}, paginator.Paginable) (interface{}, error)); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(context.Context, rel.Repository, interface{}, paginator.Paginable) (interface{}, error))
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}
