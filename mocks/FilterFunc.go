// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	paginator "github.com/manicar2093/charly_team_api/db/paginator"
	mock "github.com/stretchr/testify/mock"

	rel "github.com/go-rel/rel"
)

// FilterFunc is an autogenerated mock type for the FilterFunc type
type FilterFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, repo, values, _a3
func (_m *FilterFunc) Execute(ctx context.Context, repo rel.Repository, values interface{}, _a3 paginator.Paginable) (interface{}, error) {
	ret := _m.Called(ctx, repo, values, _a3)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, rel.Repository, interface{}, paginator.Paginable) interface{}); ok {
		r0 = rf(ctx, repo, values, _a3)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, rel.Repository, interface{}, paginator.Paginable) error); ok {
		r1 = rf(ctx, repo, values, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
