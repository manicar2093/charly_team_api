// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package main

import (
	context "context"

	entities "github.com/manicar2093/charly_team_api/db/entities"
	mock "github.com/stretchr/testify/mock"

	models "github.com/manicar2093/charly_team_api/models"
)

// MockUserService is an autogenerated mock type for the UserService type
type MockUserService struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: ctx, user
func (_m *MockUserService) CreateUser(ctx context.Context, user *models.CreateUserRequest) (*entities.User, error) {
	ret := _m.Called(ctx, user)

	var r0 *entities.User
	if rf, ok := ret.Get(0).(func(context.Context, *models.CreateUserRequest) *entities.User); ok {
		r0 = rf(ctx, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *models.CreateUserRequest) error); ok {
		r1 = rf(ctx, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
